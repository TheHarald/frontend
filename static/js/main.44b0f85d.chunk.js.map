{"version":3,"sources":["res/button.svg","res/logo.svg","res/info.svg","res/buner.svg","res/docs.svg","res/logo_left.svg","ToDo/ToDoList.js","ToDo/AddToDo.js","FirstApp/App.js","reportWebVitals.js","Hooks/Calculator.js","index.js"],"names":["ToDoList","AddToDo","onCreate","useState","value","setValue","onSubmit","event","preventDefault","trim","onChange","target","type","propTyoes","PropTypes","func","isRequired","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Calculator","num1","setNum1","num2","setNum2","symbol","setSymbol","result","setResult","InputNumber","num","className","onClick","parseFloat","Math","pow","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAAe,ICAA,ICAA,ICAA,ICAA,ICAA,I,YC2BAA,I,gBCvBf,SAASC,EAAT,GAA6B,IAAXC,EAAU,EAAVA,SAAU,EACCC,mBAAS,IADV,mBACjBC,EADiB,KACXC,EADW,KAUxB,OACI,uBAAMC,SARV,SAAuBC,GACnBA,EAAMC,iBAEHJ,EAAMK,QACLP,EAASE,IAIb,UACI,uBAAOA,MAAOA,EAAOM,SAAU,SAAAH,GAAK,OAAIF,EAASE,EAAMI,OAAOP,UAC9D,wBAAQQ,KAAM,SAAd,yBASZX,EAAQY,UAAU,CACdX,SAAUY,IAAUC,KAAKC,YCiFdC,IChGAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCsFCQ,MAzFf,WAAuB,IAAD,EAEIxB,mBAAS,IAFb,mBAEZyB,EAFY,KAEPC,EAFO,OAGI1B,mBAAS,IAHb,mBAGZ2B,EAHY,KAGPC,EAHO,OAIQ5B,mBAAS,IAJjB,mBAIZ6B,EAJY,KAILC,EAJK,OAKS9B,mBAAS,IALlB,mBAKX+B,EALW,KAKJC,EALI,KAOlB,SAASC,EAAYC,GACH,KAAXL,EACCH,EAAQD,EAAKS,GAGbN,EAAQD,EAAKO,GA+BrB,OACI,gCAEI,8BACI,sGAGJ,sBAAKC,UAAW,YAAhB,UACI,wBAAQC,QAAS,kBAAIH,EAAY,MAAME,UAAU,kBAAjD,eACA,wBAAQC,QAAS,kBAAIH,EAAY,MAAME,UAAU,kBAAjD,eACA,wBAAQC,QAAS,kBAAIH,EAAY,MAAME,UAAU,kBAAjD,eACA,wBAAQC,QAAS,kBAAKN,EAAU,MAAMK,UAAU,eAAhD,eACA,wBAAQC,QAAS,kBAAKN,EAAU,MAAMK,UAAU,eAAhD,eACA,wBAAQC,QAAS,kBAAKN,EAAU,MAAMK,UAAU,eAAhD,eACA,wBAAQC,QAAS,kBA7BzBV,EAAQ,IACRE,EAAQ,IACRE,EAAU,SACVE,EAAU,KA0B6BG,UAAU,iBAAzC,iEAGJ,sBAAKA,UAAW,YAAhB,UACI,wBAAQC,QAAS,kBAAIH,EAAY,MAAOE,UAAU,kBAAlD,eACA,wBAAQC,QAAS,kBAAIH,EAAY,MAAOE,UAAU,kBAAlD,eACA,wBAAQC,QAAS,kBAAIH,EAAY,MAAOE,UAAU,kBAAlD,eACA,wBAAQC,QAAS,kBAAKN,EAAU,MAAMK,UAAU,eAAhD,eACA,wBAAQC,QAAS,kBAAKN,EAAU,MAAMK,UAAU,eAAhD,eACA,wBAAQC,QAAS,iBA/Bb,MAATP,GAAcG,EAAUK,WAAWZ,GAAMY,WAAWV,IAC3C,MAATE,GAAcG,EAAUK,WAAWZ,GAAMY,WAAWV,IAC3C,MAATE,GAAcG,EAAUK,WAAWZ,GAAMY,WAAWV,IAC3C,MAATE,GAAcG,EAAUK,WAAWZ,GAAMY,WAAWV,SAC3C,MAATE,GAAcG,EAAUM,KAAKC,IAAIF,WAAWZ,GAAMY,WAAWV,OA2B3BQ,UAAU,eAAvC,eACA,wBAAQC,QAAS,iBAlDb,KAATT,EACCC,EAAQD,EAAKa,MAAM,GAAG,IACV,KAAPb,GACLG,EAAU,SAEJ,KAAPH,GAAsB,KAATE,GACZH,EAAQD,EAAKe,MAAM,GAAG,MA4CUL,UAAU,iBAAtC,kBAKJ,sBAAKA,UAAW,YAAhB,UACI,wBAAQC,QAAS,kBAAIH,EAAY,MAAOE,UAAU,kBAAlD,eACA,wBAAQC,QAAS,kBAAIH,EAAY,MAAOE,UAAU,kBAAlD,eACA,wBAAQC,QAAS,kBAAIH,EAAY,MAAOE,UAAU,kBAAlD,eACA,wBAAQC,QAAS,kBAAIH,EAAY,MAAME,UAAU,kBAAjD,eACA,wBAAQC,QAAS,kBAAIH,EAAY,MAAME,UAAU,eAAjD,kBAGJ,6BAAKV,IACL,6BAAKI,IACL,6BAAKF,IACL,6BAAKI,QC7EjBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B9B,M","file":"static/js/main.44b0f85d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/button.78f74338.svg\";","export default __webpack_public_path__ + \"static/media/logo.a2f945cd.svg\";","export default __webpack_public_path__ + \"static/media/info.aae6077f.svg\";","export default __webpack_public_path__ + \"static/media/buner.2968687c.svg\";","export default __webpack_public_path__ + \"static/media/docs.cb1bb266.svg\";","export default __webpack_public_path__ + \"static/media/logo_left.3ee6dacd.svg\";","import React from 'react'\r\nimport Item from \"./Item\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst styles = {\r\n    ul:{\r\n        listStyle:'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\nfunction ToDoList(props){\r\n    return(\r\n        <ul style={styles.ul}>\r\n            {props.todos.map((todo,index) =>{\r\n                return <Item todo={todo} key={todo.id} index={index} makeTask={props.onToggle}/>\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nToDoList.propTypes ={\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n}\r\nexport default ToDoList\r\n","import React,{useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction AddToDo({onCreate}){\r\n    const [value,setValue] = useState('')\r\n\r\n    function submitHandler(event){\r\n        event.preventDefault()\r\n\r\n        if(value.trim()){\r\n            onCreate(value)\r\n        }\r\n    }\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <input value={value} onChange={event => setValue(event.target.value)}/>\r\n            <button type={\"submit\"}>\r\n                Add some\r\n            </button>\r\n        </form>\r\n        )\r\n\r\n}\r\n\r\n\r\nAddToDo.propTyoes={\r\n    onCreate: PropTypes.func.isRequired\r\n}\r\nexport default AddToDo\r\n","import './App.css';\r\nimport button from '../res/button.svg'\r\nimport logo from '../res/logo.svg'\r\nimport info from '../res/info.svg'\r\nimport buner from '../res/buner.svg'\r\nimport docs from '../res/docs.svg'\r\nimport logo_left from '../res/logo_left.svg'\r\nimport ToDoList from \"../ToDo/ToDoList\";\r\nimport Item from \"../ToDo/Item\";\r\nimport * as React from \"react\";\r\nimport Context from './Context'\r\nimport AddToDo from \"../ToDo/AddToDo\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const [todos,setToDos] = React.useState([\r\n        {id:1, completed:false, title:'Доделать теорвер.'},\r\n        {id:2, completed:false, title:'Доделать джаву.'},\r\n        {id:3, completed:false, title:'Доделать питон.'}\r\n    ])\r\n\r\n\r\n\r\n    function toggleToDo(id){\r\n        setToDos(todos.map(todo =>{\r\n            if(todo.id === id){\r\n                todo.completed =!todo.completed\r\n            }\r\n            return todo\r\n        })\r\n        )\r\n    }\r\n\r\n    function removeToDo(id){\r\n        setToDos(todos.filter(todo=> todo.id !== id))\r\n    }\r\n\r\n    function addToDo(title){\r\n        setToDos(todos.concat([{\r\n                title:title,\r\n                id: Date.now(),\r\n                completed: false\r\n            }]))\r\n    }\r\n\r\n    return(\r\n        <Context.Provider value={{removeToDo}}>\r\n            <div className={'wrapper'}>\r\n                <h2>Test string</h2>\r\n                {todos.length ? <ToDoList todos={todos} onToggle={toggleToDo}/> : <p> no todos</p> }\r\n                <AddToDo />\r\n            </div>\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction Header(){\r\n  return(\r\n      <div className={'Header'}>\r\n          <div className={'Logo'}>\r\n              <img src={logo}/>\r\n          </div>\r\n          <div className={'Info'}>\r\n              <img src={info}/>\r\n          </div>\r\n          <div className={'Docs'}>\r\n              <img src={docs}/>\r\n          </div>\r\n          <div className={'Logo-left'}>\r\n              <img src={logo_left}/>\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nfunction Buner(){\r\n    return(\r\n        <div className={'Buner'}>\r\n            <img src={buner}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Some(){\r\n  return(<div>\r\n    <ul>\r\n      <p>Text</p>\r\n      <li>some text</li>\r\n      <li>now text</li>\r\n      <li>bet text</li>\r\n      <li>some same</li>\r\n    </ul>\r\n  </div>);\r\n}\r\n\r\n\r\nfunction ButtonBlue(){\r\n  return(\r\n      <div className={'Button'}>\r\n        <img src={button}/>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {useState} from 'react'\r\nimport './BtnSpace.css'\r\n\r\n\r\nfunction Calculator() {\r\n\r\n    const[num1,setNum1] = useState('')\r\n    const[num2,setNum2] = useState('')\r\n    const[symbol,setSymbol] = useState('')\r\n    const [result,setResult] = useState('')\r\n\r\n    function InputNumber(num){\r\n        if(symbol === ''){\r\n            setNum1(num1+num)\r\n        }\r\n        else{\r\n            setNum2(num2+num)\r\n        }\r\n    }\r\n\r\n    function del(){\r\n        if(num2 !== ''){\r\n            setNum2(num2.slice(0,-1))\r\n        }else if(num2===''){\r\n            setSymbol('')\r\n        }\r\n        if(num2==='' && symbol===''){\r\n            setNum1(num1.slice(0,-1))\r\n        }\r\n    }\r\n\r\n    function clear(){\r\n        setNum1('')\r\n        setNum2('')\r\n        setSymbol('')\r\n        setResult('')\r\n    }\r\n\r\n    function calc(){\r\n        if(symbol==='+') setResult(parseFloat(num1)+parseFloat(num2))\r\n        if(symbol==='-') setResult(parseFloat(num1)-parseFloat(num2))\r\n        if(symbol==='*') setResult(parseFloat(num1)*parseFloat(num2))\r\n        if(symbol==='/') setResult(parseFloat(num1)/parseFloat(num2))\r\n        if(symbol==='^') setResult(Math.pow(parseFloat(num1),parseFloat(num2)))\r\n\r\n    }\r\n\r\n    return(\r\n        <div >\r\n\r\n            <div>\r\n                <h1>Калькулятор</h1>\r\n            </div>\r\n\r\n            <div className={'btn-space'}>\r\n                <button onClick={()=>InputNumber('1')} className='btn btn-primary' >1</button>\r\n                <button onClick={()=>InputNumber('2')} className='btn btn-primary' >2</button>\r\n                <button onClick={()=>InputNumber('3')} className='btn btn-primary' >3</button>\r\n                <button onClick={()=> setSymbol('+')} className='btn btn-info'>+</button>\r\n                <button onClick={()=> setSymbol('*')} className='btn btn-info'>*</button>\r\n                <button onClick={()=> setSymbol('^')} className='btn btn-info'>^</button>\r\n                <button onClick={()=> clear()} className='btn btn-danger'>Очистить</button>\r\n            </div >\r\n\r\n            <div className={'btn-space'}>\r\n                <button onClick={()=>InputNumber('4')}  className='btn btn-primary' >4</button>\r\n                <button onClick={()=>InputNumber('5')}  className='btn btn-primary' >5</button>\r\n                <button onClick={()=>InputNumber('6')}  className='btn btn-primary' >6</button>\r\n                <button onClick={()=> setSymbol('-')} className='btn btn-info'>-</button>\r\n                <button onClick={()=> setSymbol('/')} className='btn btn-info'>/</button>\r\n                <button onClick={()=>calc()} className='btn btn-info'>=</button>\r\n                <button onClick={()=>del()} className='btn btn-danger'>&lt;</button>\r\n\r\n            </div>\r\n\r\n\r\n            <div className={'btn-space'}>\r\n                <button onClick={()=>InputNumber('7')}  className='btn btn-primary' >7</button>\r\n                <button onClick={()=>InputNumber('8')}  className='btn btn-primary' >8</button>\r\n                <button onClick={()=>InputNumber('9')}  className='btn btn-primary' >9</button>\r\n                <button onClick={()=>InputNumber('0')} className='btn btn-primary'>0</button>\r\n                <button onClick={()=>InputNumber('.')} className='btn btn-info'>.</button>\r\n            </div>\r\n\r\n            <h4>{num1}</h4>\r\n            <h4>{symbol}</h4>\r\n            <h4>{num2}</h4>\r\n            <h4>{result}</h4>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calculator","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './FirstApp/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Application from './otherEdu/Application'\r\nimport AppVk from \"./otherEdu/AppVk\";\r\nimport AppHooks from './Hooks/AppHooks'\r\nimport Calculator from \"./Hooks/Calculator\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Calculator/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}